# installation tasks for role `redmine`
-
  name: 'fetch archive'
  sudo: no
  get_url:
    url: 'http://www.redmine.org/releases/redmine-{{ redmine_install_version }}.tar.gz'
    dest: '~/redmine.tar.gz'

-
  name: 'create unarchive dir'
  sudo: no
  file:
    path: '{{ redmine_unarchive_path }}'
    state: directory

-
  name: 'clean symlink target'
  sudo: yes
  file:
    path: '{{ redmine_install_path }}'
    state: absent

-
  name: 'get stat of unarchived'
  sudo: no
  stat:
    path: '{{ redmine_unarchive_path }}/redmine-{{ redmine_install_version }}'
  register: unarchived

-
  name: 'unarchive'
  sudo: no
  unarchive:
    copy: no
    src: '~/redmine.tar.gz'
    dest: '{{ redmine_unarchive_path }}'
  when: unarchived.stat.isdir is not defined or unarchived.stat.isdir == false

-
  name: 'create link'
  sudo: no
  file:
    src: '{{ redmine_unarchive_path }}/redmine-{{ redmine_install_version }}'
    dest: '{{ redmine_install_path }}'
    state: link

-
  name: 'create database user'
  sudo: no
  mysql_user:
    name: '{{ redmine_database_user }}'
    password: '{{ redmine_database_password }}'
    priv: '{{ redmine_database_name }}.*:ALL'
    state: present
    login_host: '{{ redmine_database_host }}'
    login_port: '{{ redmine_database_port }}'

-
  name: 'create database'
  sudo: no
  mysql_db:
    name: '{{ redmine_database_name }}'
    state: present
    encoding: '{{ redmine_database_encoding }}'
    login_host: '{{ redmine_database_host }}'
    login_port: '{{ redmine_database_port }}'
    login_user: '{{ redmine_database_user }}'
    login_password: '{{ redmine_database_password }}'

-
  name: 'create config/database.yml'
  sudo: no
  template:
    src: 'database.yml.j2'
    dest: '{{ redmine_install_path }}/config/database.yml'

-
  name: 'create config/configuration.yml'
  sudo: no
  template:
    src: 'configuration.yml.j2'
    dest: '{{ redmine_install_path }}/config/configuration.yml'

-
  name: 'install bundler modules'
  sudo: no
  command: '~{{ rbenv_user }}/.rbenv/shims/bundle install --path vendor/bundler --without development test'
  args:
    chdir: '{{ redmine_install_path }}'

-
  name: 'check secret token'
  sudo: no
  stat:
    path: '{{ redmine_install_path }}/config/initializers/secret_token.rb'
  register: secret_token

-
  name: 'generate secret token'
  sudo: no
  command: '~{{ rbenv_user }}/.rbenv/shims/bundle exec rake generate_secret_token'
  args:
    chdir: '{{ redmine_install_path }}'
  when: 'secret_token.stat.exists == False'

-
  name: 'migrate database'
  sudo: no
  shell: 'RAILS_ENV=production ~{{ rbenv_user }}/.rbenv/shims/bundle exec rake db:migrate'
  args:
    chdir: '{{ redmine_install_path }}'

